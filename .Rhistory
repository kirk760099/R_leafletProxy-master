gmapsdistance(origin =x,destination = y,mode = "walking")$Distance, dist)
}
#return dist
}
library(gmapsdistance)
dist<- function( rentLocate, retailer){
x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
for (j in 1:nrow(retailer)){
y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
if (j==1){
dist = gmapsdistance(origin =x,destination = y,mode = "walking")$Distance
}
dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = "walking")$Distance<dist,
gmapsdistance(origin =x,destination = y,mode = "walking")$Distance, dist)
}
return dist
}
dist<- function( rentLocate, retailer){
x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
for (j in 1:nrow(retailer)){
y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
if (j==1){
dist = gmapsdistance(origin =x,destination = y,mode = "walking")$Distance
}
dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = "walking")$Distance<dist,
gmapsdistance(origin =x,destination = y,mode = "walking")$Distance, dist)
}
#return dist
}
dd <- dist(rentxy,star)
library(XML)
dd <- dist(rentxy,star)
remove.packages("gmapsdistance", lib="~/R/win-library/3.3")
devtools::install_github("rodazuero/gmapsdistance")
library(gmapsdistance)
dist<- function( rentLocate, retailer){
x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
for (j in 1:nrow(retailer)){
y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
if (j==1){
dist = gmapsdistance(origin =x,destination = y,mode = "walking")$Distance
}
dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = "walking")$Distance<dist,
gmapsdistance(origin =x,destination = y,mode = "walking")$Distance, dist)
}
#return dist
}
dist(rentxy[1],star)
dist<- function( rentLocate, retailer){
x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
for (j in 1:nrow(retailer)){
y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
if (j==1){
dist = gmapsdistance(origin =x,destination = y,mode = "walking")$Distance
}
dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = "walking")$Distance<dist,
gmapsdistance(origin =x,destination = y,mode = "walking")$Distance, dist)
}
return(dist)
}
dd <- dist(rentxy,star)
dist_walk<- function( rentLocate, retailer){
x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
for (j in 1:nrow(retailer)){
y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
if (j==1){
dist = gmapsdistance(origin =x,destination = y,mode = "walking")$Distance
}
dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = "walking")$Distance<dist,
gmapsdistance(origin =x,destination = y,mode = "walking")$Distance, dist)
}
return(dist)
}
dd <- dist_walk(rentxy,star)
dist = gmapsdistance(origin =x,destination = y,mode = "walking")
x <- paste(rentxy$Response_Y,rentxy$Response_X,sep = "+")
y <- paste(star$lat[2],star$lon[2],sep = "+")
dist = gmapsdistance(origin =x,destination = y,mode = "walking")
dist
x <- paste(rentxy$Response_Y,rentxy$Response_X,sep = "+")
y <- paste(star$lat[2],star$lon[2],sep = "+")
dist = gmapsdistance(origin =x,destination = y,mode = "walking")
dist
x
y
dist
8057/60
8057/3600
0.238056*60
source(gmapdist.R)
source("gmapdist.R")
source('gmapdist.R')
source('gmapdist.R')
#rentLocate$X 經度 rentLocate$Y 緯度 retailer某家零售業裡面有經緯
#devtools::install_github("rodazuero/gmapsdistance") #bug from CRAN
library(gmapsdistance)
dist<- function( rentLocate, retailer, way){
x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
for (j in 1:nrow(retailer)){
y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
if (j==1){
dist = gmapsdistance(origin =x,destination = y,mode = way)$Distance
}
dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = way)$Distance<dist,
gmapsdistance(origin =x,destination = y,mode = way)$Distance, dist)
}
return(dist)
}
source('gmapdist.R')
rent <- read.csv("rentxy.csv",header = TRUE)
store <- read.csv("taipei_store.csv",header = TRUE)
rentLocate <-data.frame(rent$df_rent.Response_X,rent$df_rent.Response_Y)
rentxy <- slice(rentLocate,1:1)
rentxy <- rename(rentxy,Response_X = rent.df_rent.Response_X,Response_Y = rent.df_rent.Response_Y)
?rename()
star <- filter(store,tag == "star")
star <- rename(star,lon = Response_X , lat = Response_Y)
slice(star,1:1)
dd <- dist(rentxy,star,"walking")
dd
#rentLocate$X 經度 rentLocate$Y 緯度 retailer某家零售業裡面有經緯
#devtools::install_github("rodazuero/gmapsdistance") #bug from CRAN
library(gmapsdistance)
dist<- function( rentLocate, retailer, way){
x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
for (j in 1:nrow(retailer)){
y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
if (j==1){
dist = gmapsdistance(origin =x,destination = y,mode = way)$Distance
}
dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = way)$Distance<dist,
{gmapsdistance(origin =x,destination = y,mode = way)$Distance
print(x)}, dist)
}
return(dist)
}
source('gmapdist.R')
dd <- dist(rentxy,star,"walking")
dist = gmapsdistance(origin =x,destination = y,mode = way)$Distance
#rentLocate$X 經度 rentLocate$Y 緯度 retailer某家零售業裡面有經緯
#devtools::install_github("rodazuero/gmapsdistance") #bug from CRAN
library(gmapsdistance)
dist<- function( rentLocate, retailer, way){
x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
for (j in 1:nrow(retailer)){
y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
if (j==1){
dist = gmapsdistance(origin =x,destination = y,mode = way)$Distance
}
dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = way)$Distance<dist,
gmapsdistance(origin =x,destination = y,mode = way)$Distance, dist)
}
return(dist)
}
dd <- dist(rentxy,star,"walking")
ddd <-dist(rentxy,star,"driving")
dd
ddd
dd
ddd
#rentLocate$X 經度 rentLocate$Y 緯度 retailer某家零售業裡面有經緯
#devtools::install_github("rodazuero/gmapsdistance") #bug from CRAN
library(gmapsdistance)
dist<- function( rentLocate, retailer, way){
x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
for (j in 1:nrow(retailer)){
y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
if (j==1){
dist = gmapsdistance(origin =x,destination = y,mode = way)$Times#Distance
}
dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = way)$Times<dist,
gmapsdistance(origin =x,destination = y,mode = way)$Times, dist)
}
return(dist)
}
source('gmapdist.R')
dd <- dist(rentxy,star,"walking")
ddd <-dist(rentxy,star,"driving")
dd
ddd
#rentLocate$X 經度 rentLocate$Y 緯度 retailer某家零售業裡面有經緯
#devtools::install_github("rodazuero/gmapsdistance") #bug from CRAN
library(gmapsdistance)
dist<- function( rentLocate, retailer, way){
x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
for (j in 1:nrow(retailer)){
y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
if (j==1){
dist = gmapsdistance(origin =x,destination = y,mode = way)$Time#Distance
}
dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = way)$Time<dist,
gmapsdistance(origin =x,destination = y,mode = way)$Time, dist)
}
return(dist)
}
source('gmapdist.R')
dd <- dist(rentxy,star,"walking")
ddd <-dist(rentxy,star,"driving")
dd
ddd
rentLocate <- read.csv("rentxy.csv",header = TRUE)
View(rentLocate)
?read.csv
rentLocate <- read.csv("rentxy.csv",col.names = c(id,Response_X,Response_Y,farePS,cata))
rentLocate <- read.csv("rentxy.csv",col.names = c("id","Response_X","Response_Y","farePS","cata"))
rentLocate <- read.csv("rentxy.csv",col.names = c("id","Response_X","Response_Y","farePS","cata"))
rentxy <- slice(rentLocate,1:1)
rentxy
rent_dist = data.frame()
rent_dist$star =NA
rent_dist = data.frame()
rent_dist
rent_dist$star = NA
rent_dist$star <- NA
rentxy <- slice(rentLocate,1:5)
rentxy
rent_dist = data.frame()
for(i in nrow(rentxy)){
rent_dist$star  <- dist(rentxy[i],star)
}
for(i in nrow(rentxy)){
rent_dist$star  <- dist(rentxy[i],star,"walking")
}
for(i in 1:nrow(rentxy)){
rent_dist$star  <- dist(rentxy[i],star,"walking")
}
rentxy[2]
rentxy[1]
rentxy
rentxy[1,1]
rentxy[1,2]
rentxy[,2]
rentxy[1,]
for(i in 1:nrow(rentxy)){
rent_dist$star[i]  <- dist(rentxy[i,],star,"walking")
}
for(i in 1:5){
rent_dist$star[i]  <- dist(rentxy[i,],star,"walking")
}
rentxy[1,]
rentxy[1,]$Response_Y
rentxy[1,]$Response_X
rent_dist$star[1]
rent_dist = data.frame()
rent_dist = NULL
rent_dist
rent_dist$star = NULL
rent_dist
for(i in 1:5){
rent_dist$star[i]  <- dist(rentxy[i,],star,"walking")
}
for(i in 1:2){
rent_dist$star[i]  <- dist(rentxy[i,],star,"walking")
Sys.sleep(3)
}
rent_dist
View(store)
storeList <- c("star","cosmed")
for(i in storeList){
paste(i,"string",sep = "_") <- filter(store,tag ==storeList[i])
}
for(i in storeList){
i <- filter(store,tag ==storeList[i])
}
i
storeList
j=0
for(i in storeList){
i <- filter(store,tag ==storeList[i])
j++
}
for(i in storeList){
i <- filter(store,tag ==storeList[i])
j=j+1
}
for(i in storeList){
i <- filter(store,tag ==storeList[i])
}
for(i in storeList){
stack[i] <- filter(store,tag ==storeList[i])
}
stack <- list()
for(i in storeList){
stack[i] <- filter(store,tag ==storeList[i])
}
stack
stack[1]
stack[2]
filter(store,tag ==storeList[1])
shiny::runApp()
source('gmapdist.R')
library(dplyr)
rentLocate <- read.csv("rentxy.csv",col.names = c("id","Response_X","Response_Y","farePS","cata"))
store <- read.csv("taipei_store.csv",header = TRUE)
rentxy <- slice(rentLocate,1:5)
rentxy
rentLocate
rentxy
star <- filter(store,tag == "star")
star
cosmed <- fliter(store,tag=="cosmed")
cosmed <- filter(store,tag=="cosmed")
cosmed
store
head(store)
store <- read.csv("taipei_store.csv",header = TRUE)
names(store)<-c("id","lon","lat","tag")
head(store)
star <- filter(store,tag == "star")
cosmed <- filter(store,tag=="cosmed")
str(store)
source('gmapdist.R')
library(dplyr)
rentLocate <- read.csv("rentxy.csv",col.names = c("id","Response_X","Response_Y","farePS","cata"))
store <- read.csv("taipei_store.csv",header = TRUE)
head(store)
str(store)
star <- filter(store,tag == "star")
#star <- rename(star,lon = Response_X , lat = Response_Y)
cosmed <- filter(store,tag=="cosmed")
post <- filter(store,tag=="post")
cafe85 <- filter(store,tag=="cafe85")
mrt <- filter(store,tag=="mrt")
rentxy[1,]$Response_X
rentLocate <- read.csv("rentxy.csv",col.names = c("id","Response_X","Response_Y","farePS","cata"))
rentxy <- slice(rentLocate,1:5)
rentxy
rentxy[1,]$Response_X
rent_dist = data.frame()
rent_dist$star = NULL
rent_dist
rent_dist$star = NA
rent_dist = data.frame()
rent_dist$star = NA
for(i in 1:nrow(rentxy)){
rent_dist$star[i]  <- dist(rentxy[i,],star,"walking")
Sys.sleep(3) # You have exceeded your rate-limit for this API.
}
rent_dist$star = NULL
for(i in 1:nrow(rentxy)){
rent_dist$star[i]  <- dist(rentxy[i,],star,"walking")
Sys.sleep(3) # You have exceeded your rate-limit for this API.
}
rent_dist = data.frame()
rent_dist$star = NULL
rent_dist
nrow(rentxy)
rentxy$id[1]
rentxy[1]$id
rentxy[2]$id
rentxy$id
rentxy$id[2]
for(i in 1:nrow(rentxy)){
rent_dist$star[i]  <- dist(rentxy[i,],star,"walking")
Sys.sleep(3) # You have exceeded your rate-limit for this API.
}
for(i in 1:nrow(rentxy)){
rent_dist$star[i]  <- dist(rentxy[i,],star,"walking")
Sys.sleep(3) # You have exceeded your rate-limit for this API.
}
names(rent_dist) <- c("id","Response_X","Response_Y","star","post","cosmed","mrt","cafe85")
rent_dist = data.frame()
rent_dist$id <- rentxy$id
rent_dist$id <- rentLocate$id
rent_dist = data.frame(rentLocate$id,rentLocate$Response_X,rentLocate$Response_Y)
rent_dist
rent_dist[1]
head(rent_dist)
names(rent_dist) <- c("id","Response_X","Response_Y","star","post","cosmed","mrt","cafe85")
names(rent_dist) <- c("id","Response_X","Response_Y")
head(rent_dist)
rent_dist$star = NULL
rent_dist
head(rent_dist)
rent_dist$star = NA
head(rent_dist)
rent_dist$cosmed = NA
rent_dist$post = NA
rent_dist$cafe85 = NA
rent_dist$mrt = NA
head(rent_dist)
for(i in 1:nrow(rent_dist)){
rent_dist$star[i]  <- dist(rent_dist[i,],star,"walking")
Sys.sleep(3) # You have exceeded your rate-limit for this API.
}
dist(rent_dist[1,],star,"walking")
source('gmapdist.R')
library(dplyr)
rent_dist$star[i]  <- dist(rent_dist[i,],star,"walking")
dist(rent_dist[1,],star,"walking")
rent_dist[1,]
store <- read.csv("taipei_store.csv",header = TRUE)
head(store)
str(store)
names(store)<-c("id","lon","lat","tag")
star <- filter(store,tag == "star")
cosmed <- filter(store,tag=="cosmed")
post <- filter(store,tag=="post")
cafe85 <- filter(store,tag=="cafe85")
mrt <- filter(store,tag=="mrt")
dist(rent_dist[1,],star,"walking")
nrow(rent_dist)
for(i in 1:15){
rent_dist$star[i]  <- dist(rent_dist[i,],star,"walking")
Sys.sleep(3) # You have exceeded your rate-limit for this API.
}
rent_dist
head(rent_dist,15)
#rentLocate$X 經度 rentLocate$Y 緯度 retailer某家零售業裡面有經緯
#devtools::install_github("rodazuero/gmapsdistance") #bugs from CRAN
library(gmapsdistance)
dist<- function( rentLocate, retailer, way){
x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
for (j in 1:nrow(retailer)){
y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
if (j==1){
dist = gmapsdistance(origin =x,destination = y,mode = way)$Distance
}
dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = way)$Distance<dist,
gmapsdistance(origin =x,destination = y,mode = way)$Distance, dist)
}
return(dist)
}
# ##Time
# dist_time<- function( rentLocate, retailer, way){
#   x <- paste(rentLocate$Response_Y,rentLocate$Response_X,sep = "+")
#   for (j in 1:nrow(retailer)){
#     y <- paste(retailer$lat[j],retailer$lon[j],sep = "+")
#     if (j==1){
#       dist = gmapsdistance(origin =x,destination = y,mode = way)$Time#Distance
#     }
#     dist <- ifelse(gmapsdistance(origin =x,destination = y,mode = way)$Time<dist,
#                    gmapsdistance(origin =x,destination = y,mode = way)$Time, dist)
#   }
#   return(dist)
# }
for(i in 1:1){
rent_dist$star[i]  <- dist(rent_dist[i,],star,"walking")
Sys.sleep(3) # You have exceeded your rate-limit for this API.
}
head(rent_dist,15)
for(i in 1:2){
rent_dist$star[i]  <- dist(rent_dist[i,],star,"walking")
Sys.sleep(1) # You have exceeded your rate-limit for this API.
}
head(rent_dist,15)
for(i in 1:nrow(rent_dist)){
rent_dist$star[i]  <- dist(rent_dist[i,],star,"walking")
Sys.sleep(1) # You have exceeded your rate-limit for this API.
}
for(i in 1:nrow(rent_dist)){
rent_dist$star[i]  <- dist(rent_dist[i,],star,"walking")
Sys.sleep(3) # You have exceeded your rate-limit for this API.
}
dist(rent_dist[1,],star,"walking")
nrow(star)
nrow(cosmed)
nrow(post)
nrow(cafe85)
mrt <- filter(store,tag=="mrt")#
nrow(mrt)
nrow(rentLocate)
2715*(110+180+156+112+362)
2715*(5+5+5+5+5)
2715*(3+3+3+3+3)
rentLocate <- read.csv("rentxy.csv",col.names = c("id","Response_X","Response_Y","farePS","cata"))#2715
head(store)
names(store)<-c("id","lon","lat","tag")
str(store)
library(geosphere)
#rentLocate$X 經度 rentLocate$Y 緯度 retailer某家零售業裡面有經緯度
dist<- function( rentLocate, retailer){
x <- c(rentLocate$Response_X,rentLocate$Response_Y)
for (j in 1:nrow(retailer)){
y <- c(retailer$lon[j],retailer$lat[j])
if (j==1){dist = distHaversine(x,y)}
dist <- ifelse(distHaversine(x,y)<dist, distHaversine(x,y), dist)
}
#return dist
}
#有沒有其他寫法?
star <- filter(store,tag == "star")#110
#star <- rename(star,lon = Response_X , lat = Response_Y)
cosmed <- filter(store,tag=="cosmed")#180
post <- filter(store,tag=="post")#156
cafe85 <- filter(store,tag=="cafe85")#112
mrt <- filter(store,tag=="mrt")#362
star[1]
rentLocate
rentLocate[,i]
rentLocate[,1]
rentLocate[1,]
dist<- function( rentLocate[1,], star)
source("calDist.R")
dist<- function( rentLocate[1,], star)
dist<- function( rentLocate, star)
}
df <- data.frame(rentLocate$id,rentLocate$Response_X,rentLocate$Response_Y)
df
df$star =NA
df[1,]
df$star =NULL
df[1,]
df$star1_X =NA
df$star1_Y =NA
df$star2_X =NA
df$star2_Y =NA
df$star3_X =NA
df$star3_Y =NA
df[1,]
names(df)<- c("id","Response_X","Response_Y")
df[1,]
